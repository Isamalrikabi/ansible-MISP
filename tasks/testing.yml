---

- include: travis.yml

- name: install testing tools
  package: name={{ item }} state=present
  with_items: "{{Â misp_testing_pkg }}"

- name: replace misp.local hostname
  replace: dest="{{ item }}" regexp='http:\/\/misp.local' replace="{{ misp_base_url }}" backup=yes
  with_items:
    - "{{ misp_rootdir }}/tests/curl_tests.sh"
- name: check tool version for debugging
  command: "{{ item }}"
  with_items:
    - php --version
    - composer --version
  changed_when: false
  ignore_errors: true
- name: pip dependencies for testing
  pip: name={{ item }}
  with_items:
    - coveralls
    - codecov
    - nose
    - requests-mock

- name: ensure test user in group of web server
  user: "user={{ misp_testing_user }} groups={{ www_user }} append=yes"
  become: yes

- name: check home permissions
  file: dest={{ item }} mode=0755 state=directory
  with_items:
    - "{{ misp_testing_user_home }}/build"
    - "{{ misp_testing_user_home }}"
    - /home

   # Get authkey
- name: check world-writeable permissions
  file: "dest={{ item }} mode=0777 owner={{ misp_testing_user }} recurse=yes"
  with_items:
    - "{{ misp_rootdir }}/build"
    - "{{ misp_rootdir }}/tests"
- name: use MISP travis bootstrap
  copy: "src={{ misp_rootdir }}/travis/bootstrap.php dest={{ misp_rootdir }}/app/Config/bootstrap.php backup=yes force=yes"

- name: check if existing key file
  stat: "path={{ misp_testing_key_file }}"
  register: skey
- debug: var=skey
- block:
    - name: generate key file - cake userInit
      shell: "{{ misp_rootdir }}/app/Console/cake userInit -q | tee {{ misp_testing_key_file }}"
      become: yes
    #      become_user: "{{ user }}"
      register: userInit
    - set_fact:
        userkey: "{{ userInit.stdout }}"
  when: not skey.stat.exists
- block:
    - name: get existing key file
      command: "cat {{ misp_testing_key_file }}"
      changed_when: false
      register: userInit2
    - set_fact:
        userkey: "{{ userInit2.stdout }}"
  when: skey.stat.exists
- debug: var=userkey

- file: "dest={{ misp_testing_key_file }} mode=777"
  become: yes
- name: MISP tree permissions
  file: "dest={{ misp_rootdir }} owner={{ www_user }} mode=755 recurse=yes"
  become: yes
- name: PyMISP world-writeable permissions
  file: "dest={{ misp_rootdir }}/PyMISP mode=777 owner={{ misp_testing_user }} recurse=yes"
  become: yes
## FIXME! for some reason .coverage still own by root during serverspec test
- name: PyMISP .coverage permissions
  file: "dest={{ misp_rootdir }}/PyMISP/.coverage mode=777 owner={{ misp_testing_user }} state=touch"
- name: PyMISP pymisp.egg-info permissions
  file: "dest={{ misp_rootdir }}/PyMISP/pymisp.egg-info mode=777 owner={{ misp_testing_user }} state=directory recurse=yes"

- debug: var=misp_base_url
- debug: var=userInit
- name: set local variables in PyMISP/tests/keys.py
  lineinfile: "dest={{ misp_rootdir }}/PyMISP/tests/keys.py line='{{ item }}' create=yes owner={{ misp_testing_user }}"
  with_items:
    - "url = \"{{ misp_base_url }}\""
    - "key = \"{{ userkey }}\""
- name: symlink key file in example/events
  file: "src={{ misp_rootdir }}/PyMISP/tests/keys.py dest={{ misp_rootdir }}/PyMISP/examples/events/keys.py state=link force=yes owner={{ misp_testing_user }}"

