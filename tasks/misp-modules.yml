---
## https://github.com/MISP/misp-modules

- name: Check if misp-modules directory exists
  stat: path={{ mispmodules_rootdir }}/misp-modules
  register: mm
- name: git clone MISP modules
  git:
    repo: https://github.com/MISP/misp-modules.git
    dest: "{{ mispmodules_rootdir }}/misp-modules"
    version: "{{ mispmodules_version | default('e6f4503763300f5c99a998a3cab58802a9c30b4b') }}"
  when: not mm.stat.exists

- name: Ubuntu 16.04 | Disable PyIntel471 - Python 3.6+ required
  lineinfile:
    dest: "{{ mispmodules_rootdir }}/misp-modules/REQUIREMENTS"
    regexp: '^git\+https:\/\/github.com\/MISP\/PyIntel471.git'
    state: absent
    backup: yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: Ensure pip cache directory exists
  file:
    dest: "/var/www/.cache/pip/http"
    owner: "{{ www_user }}"
    group: "{{ www_user }}"
    state: directory
    mode: '0755'

- name: debian | install dependencies for MISP modules (pip3)
  pip:
    requirements: "{{ mispmodules_rootdir }}/misp-modules/REQUIREMENTS"
    virtualenv: "{{ misp_virtualenv }}"
    virtualenv_python: "{{ python3_bin }}"
  when: ansible_os_family == 'Debian'
  register: pkg_result
  until: pkg_result is success
  become: yes
  become_user: "{{ www_user }}"
## centos7: pip points to python3x
- name: redhat | install dependencies for MISP modules (pip)
  pip:
    requirements: "{{ mispmodules_rootdir }}/misp-modules/REQUIREMENTS"
    virtualenv: "{{ misp_virtualenv }}"
  when: ansible_os_family == 'RedHat'
  environment:
    PATH: "{{ misp_virtualenv }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  register: pkg_result
  until: pkg_result is success
  become: yes
  become_user: "{{ www_user }}"

- name: install MISP modules (pip3)
  pip:
    name: "file://{{ mispmodules_rootdir }}/misp-modules"
    virtualenv: "{{ misp_virtualenv }}"
    virtualenv_python: "{{ python3_bin }}"
  environment:
    PATH: "{{ misp_virtualenv }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  register: pkg_result
  until: pkg_result is success
  become: yes
  become_user: "{{ www_user }}"

- name: add MISP modules script for boot
  lineinfile:
    dest: /etc/rc.local
    regexp: "sudo -H -u {{ www_user }} {{ misp_virtualenv }}/bin/misp-modules .* &"
    line: "sudo -H -u {{ www_user }} {{ misp_virtualenv }}/bin/misp-modules -s > /tmp/misp-modules.boot 2>&1 &"
    insertbefore: "^exit 0"
    backup: yes

- name: check if misp modules is running
  shell: "ps axu |grep misp-modules"
  register: ps
  changed_when: false
  ignore_errors: true
- name: start MISP modules app
  shell: "{{ misp_virtualenv }}/bin/misp-modules -s > /tmp/misp-modules.start 2>&1 &"
  become: yes
  become_user: "{{ www_user }}"
  when: "'misp-modules' not in ps.stdout"

- name: Redhat7 | libpcre symlink for python yara module
  file:
    src: /usr/lib64/libpcre.so.1
    dest: /usr/lib64/libpcre.so.3
    state: link
  when: ansible_os_family == "RedHat" and ansible_distribution_version.split('.')[0] == '7'

- name: Ubuntu | check libyara.so location
  stat:
    path: /usr/lib/libyara.so
  register: libyaraso
- name: Ubuntu | libyara.so symlink for python yara module
  file:
    src: "{{ mispmodules_libyarapath }}/libyara.so"
    dest: /usr/lib/libyara.so
    state: link
  ignore_errors: true
  when: ansible_distribution == 'Ubuntu' and not libyaraso.stat.exists
